TorqueBalancing_js contains the joint space balancing controller for the robot iCub, implemented in matlab.

General structure:

-main code: integrateForwardDynamic.m. you must run this file to start the simulation.

-forward dynamics integration: is structured in forwardDynamics.m.

-inverse kinematics integration: is computed by the "ikin_...." functions.

-balancing controller: main functions for balancing controller are: gains.m, controllerFCN.m, balController.m. this code uses a joint space 
 balancing controller.

-conversion from floating base to centroidal dynamics: is performed in the two functions fromFloatingToCentroidalDynamics.m and centroidalTranformationT_TDot.m.

-visualizer: the functions for visualization are visaulizer_demo.m and visualizer_graphics.m. 

-other matlab functions: there are other functions used in the code, they are both in the TorqueBalancing_js folder and in the foders indicated by the 
 selected paths in integrateForwardDynamics.m.

How to use it:

-open integrateForwardDynamics.m

-at the top of the code, choose the desired simulation parameters, such as balancing on two feet or one foot, the dresired CoM trajectory and
 how many graphics must be plotted.

-in integrateForwardDynamics.m there's also the possibility to set the simulation time and the simulation step for both the inverse kinematics integrator 
 and the state integrator.

-open gains.m if you want to modify joints impedances and dampings.



