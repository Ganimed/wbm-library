<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="3360" height="4928"><defs></defs><g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="19" y="1655" width="95.2" height="15" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="19" y="1669" width="238" height="100" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#d8e5ff" stroke="none" x="12" y="1663" width="238" height="99"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 1663 L 250 1663 L 250 1762 L 12 1762 L 12 1663 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#d8e5ff" stroke="none" x="12" y="1648" width="95.2" height="15"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 1648 L 107.2 1648 L 107.2 1663 L 12 1663 L 12 1648 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#d8e5ff" stroke="none" x="12" y="1662" width="238" height="100"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 1662 L 250 1662 L 250 1762 L 12 1762 L 12 1662 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="29.5" y="1682.5">Robot.YourRobotName_ModelType</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2703" y="2145" width="93.59999999999991" height="15" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2703" y="2159" width="234" height="100" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#d8e5ff" stroke="none" x="2696" y="2153" width="234" height="99"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2696 2153 L 2930 2153 L 2930 2252 L 2696 2252 L 2696 2153 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#d8e5ff" stroke="none" x="2696" y="2138" width="93.59999999999991" height="15"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2696 2138 L 2789.6 2138 L 2789.6 2153 L 2696 2153 L 2696 2138 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#d8e5ff" stroke="none" x="2696" y="2152" width="234" height="100"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2696 2152 L 2930 2152 L 2930 2252 L 2696 2252 L 2696 2152 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2711.5" y="2172.5">Robot.YourRobotName_ModelType</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1197" y="17" width="833" height="1315" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#a3e0ff" stroke="none" x="1190" y="10" width="833" height="1315"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 1190 10 L 2023 10 L 2023 1325 L 1190 1325 L 1190 10 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 1190 35 L 2023 35" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 1190 193 L 2023 193" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1575" y="29.5">WBMBase</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="52.5">+fixed_link: string</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="67.5">+init_wf_R_b: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="82.5">+init_wf_p_b: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="97.5">+g_wf: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="112.5">+ndof: integer</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="127.5">+frict_coeff: struct</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="142.5">+joint_limits: struct {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="157.5">+robot_model: wbmBaseRobotModel {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="172.5">+DF_ROBOT_MODEL: string {readOnly}</text><path fill="none" stroke="#000000" d="M 1195 172.5 L 1429 172.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="187.5">+MAX_NUM_JOINTS: integer {readOnly}</text><path fill="none" stroke="#000000" d="M 1195 187.5 L 1428 187.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="210.5">+WBMBase(out obj: WBMBase, robot_model: wbmBaseRobotModel)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="225.5">+copy(out newObj: WBMBase, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="240.5">+delete()</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="255.5">+initModel(obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="270.5">+initModel(obj, urdf_model_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="285.5">+initModelURDF(obj, urdf_file_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="300.5">+setWorldFrame(obj, wf_R_b: matrix, wf_p_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="315.5">+setWorldFrame(obj, wf_R_b: matrix, wf_p_b: vector, g_wf: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="330.5">+setInitWorldFrame(obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="345.5">+setInitWorldFrame(obj, wf_R_b: matrix, wf_p_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="360.5">+setInitWorldFrame(obj, wf_R_b: matrix, wf_p_b: vector, g_wf: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="375.5">+getWorldFrameFromFixLnk(out wf_p_b: vector, out wf_R_b: matrix, obj, urdf_fixed_link: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="390.5">+getWorldFrameFromFixLnk(out wf_p_b: vector, out wf_R_b: matrix, obj, urdf_fixed_link: string, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="405.5">+getWorldFrameFromDfltFixLnk(out wf_p_b: vector, out wf_R_b: matrix, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="420.5">+getWorldFrameFromDfltFixLnk(out wf_p_b: vector, out wf_R_b: matrix, obj, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="435.5">+setState(q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="450.5">+getState(out vqT_b: vector, out q_j: vector, out v_b: vector, out dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="465.5">+getFloatingBaseState(out stFltb: wbmFltgBaseState)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="480.5">+transformationMatrix(out wf_H_lnk: matrix, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="495.5">+transformationMatrix(out wf_H_lnk: matrix, obj, urdf_link_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="510.5">+transformationMatrix(out wf_H_lnk: matrix, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="525.5">+transformationMatrix(out wf_H_lnk: matrix, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector, urdf_link_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="540.5">+massMatrix(out M: matrix)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="555.5">+massMatrix(out M: matrix, wf_R_b: matrix, wf_p_b: vector, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="570.5">+getJointLimits(out jlmts_lwr: vector, out jlmts_upr: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="585.5">+isJointLimit(out resv: vector, obj, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="600.5">+generalizedBaseAcc(out dv_b: vector, obj, M: matrix, c_qv: vector, ddq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="615.5">+inverseDynamics(out tau_j: vector, ob, dq_j: vector, ddq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="630.5">+inverseDynamics(out tau_j: vector, obj, dq_j: vector, ddq_j: vector, dv_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="645.5">+inverseDynamics(out tau_j: vector, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, ddq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="660.5">+inverseDynamics(out tau_j: vector, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, ddq_j: vector, dv_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="675.5">+jacobian(out wf_J_lnk: matrix, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="690.5">+jacobian(out wf_J_lnk: matrix, obj, urdf_link_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="705.5">+jacobian(out wf_J_lnk: matrix, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="720.5">+jacobian(out wf_J_lnk: matrix, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector, urdf_link_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="735.5">+dJdq(out djdq_lnk: vector, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="750.5">+dJdq(out djdq_lnk: vector, obj, urdf_link_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="765.5">+dJdq(out djdq_lnk: vector, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="780.5">+dJdq(out djdq_lnk: vector, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, urdf_link_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="795.5">+centroidalMomentum(out h_c: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="810.5">+centroidalMomentum(out h_c: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="825.5">+forwardKinematics(out vqT_lnk: vector, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="840.5">+forwardKinematics(out vqT_lnk: vector, obj, urdf_link_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="855.5">+forwardKinematics(out vqT_lnk: vector, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="870.5">+forwardKinematics(out vqT_lnk: vector, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector, urdf_link_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="885.5">+generalizedBiasForces(out c_qv: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="900.5">+generalizedBiasForces(out c_qv: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="915.5">+generalizedForces(out tau_gen: vector, Je_t: matrix, f_e: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="930.5">+generalizedForces(out tau_gen: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, Je_t: matrix, f_e: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="945.5">+coriolisBiasForces(out c_qv: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="960.5">+coriolisBiasForces(out c_qv: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="975.5">+gravityBiasForces(out g_q: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="990.5">+gravityBiasForces(out g_q: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1005.5">+frictionForces(out tau_fr: vector, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1020.5">+frictionForces(out tau_fr: vector, obj, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1035.5">+wholeBodyDynamics(out M: matrix, out c_qv: vector, out h_c: vector, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1050.5">+wholeBodyDynamics(out M: matrix, out c_qv: vector, out h_c: vector, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1065.5">+set.fixed_link(obj, rlnk_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1080.5">+get.fixed_link(out rlnk_name: string, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1095.5">+set.init_wf_R_b(obj, wf_R_b: matrix)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1110.5">+get.init_wf_R_b(out wf_R_b: matrix, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1125.5">+set.init_wf_p_b(obj, wf_p_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1140.5">+get.init_wf_p_b(out wf_p_b: vector, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1155.5">+set.g_wf(obj, g_wf: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1170.5">+get.g_wf(out g_wf: vector, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1185.5">+set.ndof(obj, ndof: integer)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1200.5">+get.ndof(out ndof: integer, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1215.5">+set.frict_coeff(obj, frict_coeff: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1230.5">+get.frict_coeff(out frict_coeff: struct, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1245.5">+get.joint_limits(out jlmts: struct, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1260.5">+get.robot_model(out robot_model: wbmBaseRobotModel, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1275.5">+dispModel(obj, prec: integer = 2)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1290.5">-initWBM(obj, robot_model: wbmBaseRobotModel)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1305.5">-computeNewWorld2Base(obj, urdf_link_name: string): vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1195" y="1320.5">-computeNewWorld2Base(out nw_p_b: vector, out nw_R_b: matrix, obj, urdf_link_name: string, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="873" y="1507" width="1487" height="3370" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ffff91" stroke="none" x="866" y="1500" width="1487" height="3370"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 866 1500 L 2353 1500 L 2353 4870 L 866 4870 L 866 1500 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 866 1525 L 2353 1525" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 866 1728 L 2353 1728" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1593" y="1519.5">WBM</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1542.5">+stvLen: integer {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1557.5">+vqT_base: vector {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1572.5">+init_vqT_base: vector {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1587.5">+init_stvChi: vector {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1602.5">+init_state: wbmStateParams</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1617.5">+robot_body: wbmBody {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1632.5">+robot_config: wbmBaseRobotConfig {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1647.5">+robot_params: wbmBaseRobotParams {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1662.5">+DF_STIFFNESS: double {readOnly}</text><path fill="none" stroke="#000000" d="M 871 1662.5 L 1084 1662.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1677.5">+MAX_NUM_TOOLS: integer {readOnly}</text><path fill="none" stroke="#000000" d="M 871 1677.5 L 1103 1677.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1692.5">+ZERO_CVEC_12: vector {readOnly}</text><path fill="none" stroke="#000000" d="M 871 1692.5 L 1084 1692.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1707.5">+ZERO_CVEC_6: vector {readOnly}</text><path fill="none" stroke="#000000" d="M 871 1707.5 L 1077 1707.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1722.5">#mwf2fixLnk: logical</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1745.5">+WBM(out obj: WBM, robot_model: wbmBaseRobotModel, robot_config: wbmBaseRobotConfig, wf2fixLnk: logical = false)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1760.5">+copy(out newObj: WBM, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1775.5">+delete(obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1790.5">+setWorldFrameAtFixLnk(obj, urdf_fixed_link: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1805.5">+setWorldFrameAtFixLnk(obj, urdf_fixed_link: string, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1820.5">+setWorldFrameAtFixLnk(obj, urdf_fixed_link: string, q_j: vector, dq_j: vector, v_b: vector, g_wf: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1835.5">+updateWorldFrameFromFixLnk(obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1850.5">+updateWorldFrameFromFixLnk(obj, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1865.5">+updateWorldFrameFromFixLnk(obj, q_j: vector, dq_j: vector, v_b: vector, g_wf: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1880.5">+updateInitVQTransformation(obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1895.5">+fkinVQTransformation(out vqT_lnk: vector, obj, urdf_link_name: string, q_j: vector, vqT_b: vector, g_wf: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1910.5">+contactJacobians(out Jc: matrix, out djcdq: vector, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1925.5">+contactJacobians(out Jc: matrix, out djcdq: vector, obj, idx_list: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1940.5">+contactJacobians(out Jc: matrix, out djcdq: vector, obj, wf_R_b_arr: vector, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1955.5">+contactJacobians(out Jc: matrix, out djcdq: vector, obj, wf_R_b_arr: vector, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, idx_list: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1970.5">+contactForces(out f_c: vector, out tau_gen: struct, obj, tau: vector, Jc: matrix, djcdq: vector, M: matrix, c_qv: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="1985.5">+contactForces(out f_c: vector, out tau_gen: struct, obj, tau: vector, Jc: matrix, djcdq: vector, M: matrix, c_qv: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2000.5">+contactForcesEF(out f_c: vector, out tau_gen: struct, obj, tau: vector, fe_c: vector, ac: vector, Jc: matrix, djcdq: vector, M: matrix, c_qv: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2015.5">+contactForcesEF(out f_c: vector, out tau_gen: struct, obj, tau: vector, fe_c: vector, ac: vector, Jc: matrix, djcdq: vector, M: matrix, c_qv: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2030.5">+contactForcesCLPCEF(out f_c: vector, out tau_gen: struct, obj, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, Jc: matrix, djcdq: vector, M: matrix, c_qv: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2045.5">+contactForcesCLPCEF(out f_c: vector, out tau_gen: struct, obj, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, Jc: matrix, djcdq: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2060.5">+contactForcesCLPCEF(out f_c: vector, out tau_gen: struct, obj, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, Jc: matrix, djcdq: vector, M: matrix, c_qv: vector, wf_R_b_arr: vector, wf_p_b: vector, q_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2075.5">+contactForcesCLPCEF(out f_c: vector, out tau_gen: struct, obj, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, Jc: matrix, djcdq: vector, M: matrix, c_qv: vector, wf_R_b_arr: vector, wf_p_b: vector, q_j: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2090.5">+wholeBodyDynamicsCS(out M: matrix, out c_qv: vector, out Jc: matrix, out djcdq: vector, obj, clink_conf: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2105.5">+wholeBodyDynamicsCS(out M: matrix, out c_qv: vector, out Jc: matrix, out djcdq: vector, obj, clink_conf: struct, idx_list: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2120.5">+wholeBodyDynamicsCS(out M: matrix, out c_qv: vector, out Jc: matrix, out djcdq: vector, obj, clink_conf: struct, wf_R_b_arr: vector, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2135.5">+wholeBodyDynamicsCS(out M: matrix, out c_qv: vector, out Jc: matrix, out djcdq: vector, obj, clink_conf: struct, wf_R_b_arr: vector, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, idx_list: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2150.5">+contactJacobiansCS(out Jc: matrix, out djcdq: vector, obj, clink_conf: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2165.5">+contactJacobiansCS(out Jc: matrix, out djcdq: vector, obj, clink_conf: struct, wf_R_b_arr: vector, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2180.5">+jointAccelerations(out ddq_j: vector, out fd_prms: struct, obj, tau: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2195.5">+jointAccelerations(out ddq_j: vector, out fd_prms: struct, obj, tau: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2210.5">+jointAccelerations(out ddq_j: vector, out fd_prms: struct, obj, tau: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2225.5">+jointAccelerations(out ddq_j: vector, out fd_prms: struct, obj, tau: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2240.5">+jointAccelerationsEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2255.5">+jointAccelerationsEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, ac_f: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2270.5">+jointAccelerationsEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2285.5">+jointAccelerationsEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, ac_f: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2300.5">+jointAccelerationsPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2315.5">+jointAccelerationsPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, ac_f: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2330.5">+jointAccelerationsPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2345.5">+jointAccelerationsPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, ac_f: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2360.5">+jointAccelerationsCLPCEF(out ddq_j: vector, out fd_prms: struct, obj, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2375.5">+jointAccelerationsCLPCEF(out ddq_j: vector, out fd_prms: struct, obj, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2390.5">+jointAccelerationsCLPCEF(out ddq_j: vector, out fd_prms: struct, obj, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, Jc: matrix, djcdq: vector, M: matrix, c_qv: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2405.5">+jointAccelerationsCLPCEF(out ddq_j: vector, out fd_prms: struct, obj, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, Jc: matrix, djcdq: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2420.5">+jointAccelerationsCLPCEF(out ddq_j: vector, out fd_prms: struct, obj, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2435.5">+jointAccelerationsFPC(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, tau: vector, ac_f: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2450.5">+jointAccelerationsFPC(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, tau: vector, ac_f: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2465.5">+jointAccelerationsFPC(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, tau: vector, ac_f: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2480.5">+jointAccelerationsFPC(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, tau: vector, ac_f: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2495.5">+jointAccelerationsFPC(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, tau: vector, ac_f: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2510.5">+jointAccelerationsFPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2525.5">+jointAccelerationsFPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, ac_f: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2540.5">+jointAccelerationsFPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2555.5">+jointAccelerationsFPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2570.5">+jointAccelerationsFPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, clink_conf: struct, tau: vector, fe_c: vector, ac: vector, ac_f: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2585.5">+jointAccelerationsFPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fe_c: vector, ac: vector, ac_f: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2600.5">+jointAccelerationsFPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2615.5">+jointAccelerationsFPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, ac_f: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2630.5">+jointAccelerationsFPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2645.5">+jointAccelerationsFPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2660.5">+jointAccelerationsFPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, ac_f: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2675.5">+jointAccelerationsFPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, ac_f: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2690.5">+jointAccelerationsHPCEF(out ddq_j: vector, out fd_prms: struct, obj, hand_conf: struct, tau: vector, fe_h: vector, ac_h: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2705.5">+jointAccelerationsHPCEF(out ddq_j: vector, out fd_prms: struct, obj, hand_conf: struct, tau: vector, fe_h: vector, ac_h: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2720.5">+jointAccelerationsHPCEF(out ddq_j: vector, out fd_prms: struct, obj, hand_conf: struct, tau: vector, fe_h: vector, ac_h: vector, Jc_h: matrix, djcdq_h: vector, M: matrix, c_qv: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2735.5">+jointAccelerationsHPCEF(out ddq_j: vector, out fd_prms: struct, obj, hand_conf: struct, tau: vector, fe_h: vector, ac_h: vector, Jc_h: matrix, djcdq_h: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2750.5">+jointAccelerationsHPCEF(out ddq_j: vector, out fd_prms: struct, obj, hand_conf: struct, tau: vector, fe_h: vector, ac_h: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2765.5">+jointAccelerationsFHPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fe_h: vector, ac_h: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2780.5">+jointAccelerationsFHPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fe_h: vector, ac_h: vector, ac_f: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2795.5">+jointAccelerationsFHPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fe_h: vector, ac_h: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2810.5">+jointAccelerationsFHPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fe_h: vector, ac_h: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2825.5">+jointAccelerationsFHPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fe_h: vector, ac_h: vector, ac_f: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2840.5">+jointAccelerationsFHPCEF(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fe_h: vector, ac_h: vector, ac_f: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2855.5">+jointAccelerationsFHPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2870.5">+jointAccelerationsFHPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, ac_f: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2885.5">+jointAccelerationsFHPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2900.5">+jointAccelerationsFHPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2915.5">+jointAccelerationsFHPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, ac_f: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2930.5">+jointAccelerationsFHPCPL(out ddq_j: vector, out fd_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, fhTotCWrench: function_handle, f_cp: vector, ac_f: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2945.5">+handAccelerations(out ac_h, out a_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, ac_f: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2960.5">+handAccelerations(out ac_h, out a_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, ac_f: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2975.5">+handAccelerations(out ac_h, out a_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, ac_f: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="2990.5">+handAccelerations(out ac_h, out a_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, ac_f: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3005.5">+handAccelerations(out ac_h, out a_prms: struct, obj, feet_conf: struct, hand_conf: struct, tau: vector, ac_f: vector, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3020.5">+handVelocities(out vc_h: vector, out v_prms: struct, obj, hand_conf: struct, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3035.5">+handVelocities(out vc_h: vector, out v_prms: struct, obj, hand_conf: struct, Jc_h: matrix, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3050.5">+handVelocities(out vc_h: vector, out v_prms: struct, obj, hand_conf: struct, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3065.5">+forwardDynamics(out dstvChi: vector, obj, t: double, stvChi: vector, fhTrqControl: function_handle)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3080.5">+forwardDynamicsEF(out dstvChi: vector, obj, t: double, stvChi: vector, fhTrqControl: function_handle, feet_conf: struct, clink_conf: struct, fe_c: vector, ac: vector, ac_f: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3095.5">+forwardDynamicsPL(out dstvChi: vector, obj, t: integer, stvChi: vector, fhTrqControl: function_handle, fhTotCWrench: function_handle, feet_conf: struct, hand_conf: struct, f_cp: vector, ac_f: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3110.5">+forwardDynamicsFPC(out dstvChi: vector, obj, t: integer, stvChi: vector, fhTrqControl: function_handle, feet_conf: struct, ac_f: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3125.5">+forwardDynamicsFPCEF(out dstvChi: vector, obj, t: integer, stvChi: vector, fhTrqControl: function_handle, feet_conf: struct, clink_conf: struct, fe_c: vector, ac: vector, ac_f: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3140.5">+forwardDynamicsFPCPL(out dstvChi: vector, obj, t: integer, stvChi: vector, fhTrqControl: function_handle, fhTotCWrench: function_handle, feet_conf: struct, hand_conf: struct, f_cp: vector, ac_f: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3155.5">+forwardDynamicsHPCEF(out dstvChi: vector, obj, t: integer, stvChi: vector, fhTrqControl: function_handle, hand_conf: struct, fe_h: vector, ac_h: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3170.5">+forwardDynamicsFHPCEF(out dstvChi: vector, obj, t: integer, stvChi: vector, fhTrqControl: function_handle, feet_conf: struct, hand_conf: struct, fe_h: vector, ac_h: vector, ac_f: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3185.5">+forwardDynamicsFHPCPL(out dstvChi: vector, obj, t: integer, stvChi: vector, fhTrqControl: function_handle, fhTotCWrench: function_handle, feet_conf: struct, hand_conf: struct, f_cp: vector, ac_f: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3200.5">+intForwardDynamics(out t: vector, out stmChi: matrix, obj, tspan: vector, stvChi_0: vector, fhTrqControl: function_handle, ode_opt: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3215.5">+intForwardDynamics(out t: vector, out stmChi: matrix, obj, tspan: vector, stvChi_0: vector, fhTrqControl: function_handle, ode_opt: struct, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3230.5">+intForwardDynamics(out t: vector, out stmChi: matrix, obj, tspan: vector, stvChi_0: vector, fhTrqControl: function_handle, ode_opt: struct, feet_conf: struct, ac_f: vector, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3245.5">+intForwardDynamics(out t: vector, out stmChi: matrix, obj, tspan: vector, stvChi_0: vector, fhTrqControl: function_handle, ode_opt: struct, hand_conf: struct, fe_h: vector, ac_h: vector, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3260.5">+intForwardDynamics(out t: vector, out stmChi: matrix, obj, tspan: vector, stvChi_0: vector, fhTrqControl: function_handle, ode_opt: struct, feet_conf: struct, clink_conf: struct, fe_c: vector, ac: vector, ac_f: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3275.5">+intForwardDynamics(out t: vector, out stmChi: matrix, obj, tspan: vector, stvChi_0: vector, fhTrqControl: function_handle, ode_opt: struct, feet_conf: struct, clink_conf: struct, fe_c: vector, ac: vector, ac_f: vector, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3290.5">+intForwardDynamics(out t: vector, out stmChi: matrix, obj, tspan: vector, stvChi_0: vector, fhTrqControl: function_handle, ode_opt: struct, feet_conf: struct, hand_conf: struct, fe_h: vector, ac_h: vector, ac_f: vector, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3305.5">+intForwardDynamics(out t: vector, out stmChi: matrix, obj, tspan: vector, stvChi_0: vector, fhTrqControl: function_handle, ode_opt: struct, fhTotCWrench: function_handle, feet_conf: struct, hand_conf: struct, f_cp: vector, ac_f: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3320.5">+intForwardDynamics(out t: vector, out stmChi: matrix, obj, tspan: vector, stvChi_0: vector, fhTrqControl: function_handle, ode_opt: struct, fhTotCWrench: function_handle, feet_conf: struct, hand_conf: struct, f_cp: vector, ac_f: vector, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3335.5">+zeroCtcAcc(out ac_0: vector, obj, clink_conf: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3350.5">+zeroExtForces(out fe_0: vector, obj, clink_conf: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3365.5">+configStateCLinks(out clink_conf: struct, obj, clnk_idx: integer[1..2])</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3380.5">+configStateCLinks(out clink_conf: struct, obj, cstate: logical[2], clnk_idx: integer[1..2])</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3395.5">+configStateCLinks(out clink_conf: struct, obj, cstate: logical[2], clnk_idx: integer[1..2], q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3410.5">+configStateCLinks(out clink_conf: struct, obj, cstate: logical[2], clnk_idx: integer[1..2], q_j: vector, k_p: double, rtype: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3425.5">+configStateCLinks(out clink_conf: struct, obj, cstate: logical[2], clnk_idx: integer[1..2], q_j: vector, k_p: double, k_v: double, rtype: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3440.5">+configStateCLinks(out clink_conf: struct, obj, cstate: logical[2], clnk_idx: integer[2], veT_lnk: matrix, k_p: double, k_v: double, rtype: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3455.5">+configStateCLinks(out clink_conf: struct, obj, cstate: logical[2], clnk_idx: integer[2], vqT_lnk: matrix, k_p: double, k_v: double, rtype: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3470.5">+configStateCLinks(out clink_conf: struct, obj, cstate: logical[2], clnk_idx: integer, veT_lnk: vector, k_p: double, k_v: double, rtype: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3485.5">+configStateCLinks(out clink_conf: struct, obj, cstate: logical[2], clnk_idx: integer, vqT_lnk: vector, k_p: double, k_v: double, rtype: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3500.5">+configStateFeet(out feet_conf: struct, obj, cstate: logical[2], q_j: vector, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3515.5">+configStateFeet(out feet_conf: struct, obj, cstate: logical[2], q_j: vector, k_p: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3530.5">+configStateFeet(out feet_conf: struct, obj, cstate: logical[2], q_j: vector, k_p: double, k_v: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3545.5">+configStateFeet(out feet_conf: struct, obj, cstate: logical[2], veT_lnk: matrix, k_p: double, k_v: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3560.5">+configStateFeet(out feet_conf: struct, obj, cstate: logical[2], vqT_lnk: matrix, k_p: double, k_v: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3575.5">+configStateHands(out hand_conf: struct, obj, cstate: logical[2], q_j: vector, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3590.5">+configStateHands(out hand_conf: struct, obj, cstate: logical[2], q_j: vector, k_p: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3605.5">+configStateHands(out hand_conf: struct, obj, cstate: logical[2], q_j: vector, k_p: double, k_v: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3620.5">+configStateHands(out hand_conf: struct, obj, cstate: logical[2], veT_lnk: matrix, q_j: vector, k_p: double, k_v: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3635.5">+configStateHands(out hand_conf: struct, obj, cstate: logical[2], vqT_lnk: matrix, q_j: vector, k_p: double, k_v: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3650.5">+getFDynVisData(out vis_data: struct, obj, stmChi: matrix, fhTrqControl: function_handle)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3665.5">+getFDynVisData(out vis_data: struct, obj, stmChi: matrix, fhTrqControl: function_handle, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3680.5">+getFDynVisData(out vis_data: struct, obj, stmChi: matrix, fhTrqControl: function_handle, feet_conf: struct, ac_f: vector, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3695.5">+getFDynVisData(out vis_data: struct, obj, stmChi: matrix, fhTrqControl: function_handle, hand_conf: struct, fe_h: vector, ac_h: vector, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3710.5">+getFDynVisData(out vis_data: struct, obj, stmChi: matrix, fhTrqControl: function_handle, feet_conf: struct, clink_conf: struct, fe_c: vector, ac: vector, ac_f: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3725.5">+getFDynVisData(out vis_data: struct, obj, stmChi: matrix, fhTrqControl: function_handle, feet_conf: struct, clink_conf: struct, fe_c: vector, ac: vector, ac_f: vector, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3740.5">+getFDynVisData(out vis_data: struct, obj, stmChi: matrix, fhTrqControl: function_handle, feet_conf: struct, hand_conf: struct, fe_h: vector, ac_h: vector, ac_f: vector, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3755.5">+getFDynVisData(out vis_data: struct, obj, stmChi: matrix, fhTrqControl: function_handle, fhTotCWrench: function_handle, feet_conf: struct, hand_conf: struct, f_cp: vector, ac_f: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3770.5">+getFDynVisData(out vis_data: struct, obj, stmChi: matrix, fhTrqControl: function_handle, fhTotCWrench: function_handle, feet_conf: struct, hand_conf: struct, f_cp: vector, ac_f: vector, pc_type: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3785.5">+setupSimulation(out sim_config: absSimConfig, sim_config: absSimConfig)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3800.5">+visualizeForwardDynamics(obj, pos_out: matrix, sim_config: absSimConfig, sim_tstep: double, vis_ctrl: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3815.5">+simulateForwardDynamics(obj, pos_out: matrix, sim_config: absSimConfig, sim_tstep: double, nRpts: integer, vis_ctrl: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3830.5">+plotCoMTrajectory(obj, stmChi: matrix, prop: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3845.5">+setPayloadLinks(obj, pl_data: struct[1..*])</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3860.5">+getPayloadLinks(out pl_links: wbmPayloadLink[0..*], out nPlds: integer, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3875.5">+getPayloadTable(out pl_tbl: table, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3890.5">+payloadFrame(out wf_H_cm: matrix, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector, pl_idx: integer)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3905.5">+payloadFrame(out wf_H_cm: matrix, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3920.5">+payloadFrame(out wf_H_cm: matrix, obj, pl_idx: integer)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3935.5">+payloadFrame(out wf_H_cm: matrix, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3950.5">+payloadForce(out f_pl: vector, M_pl: matrix, v_pl: vector, a_pl: vector, wc_tot: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3965.5">+handPayloadForces(out f_pl: vector, out pl_prms: struct, obj, hand_conf: struct, fhTotCWrench: function_handle, f_cp: vector, v_pl: vector, a_pl: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3980.5">+generalizedInertiaPL(out M_pl: matrix, out frms: struct, obj, pl_idx: integer)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="3995.5">+generalizedInertiaPL(out M_pl: matrix, out frms: struct, obj, pl_idx: integer, wf_R_b: matrix, wf_p_b: vector, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4010.5">+setToolLinks(obj, ee_link_names: string[1..*], frames_tt: matrix)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4025.5">+getToolLinks(out tool_links: wbmToolLink[0..*], out nTools: integer, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4040.5">+getToolTable(out tool_tbl: table, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4055.5">+updateToolFrame(obj, ee_vqT_tt: vector, t_idx: integer)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4070.5">+toolFrame(out wf_H_tt: matrix, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector, t_idx: integer)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4085.5">+toolFrame(out wf_H_tt: matrix, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4100.5">+toolFrame(out wf_H_tt: matrix, obj, t_idx: integer)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4115.5">+toolFrame(out wf_H_tt: matrix, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4130.5">+jacobianTool(out wf_J_tt: matrix, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector, t_idx: integer)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4145.5">+jacobianTool(out wf_J_tt: matrix, obj, wf_R_b: matrix, wf_p_b: vector, q_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4160.5">+jacobianTool(out wf_J_tt: matrix, obj, t_idx: integer)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4175.5">+jacobianTool(out wf_J_tt: matrix, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4190.5">+getStateJntChains(out chn_q: cell, out chn_dq: cell, obj, chain_names: string[1..*])</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4205.5">+getStateJntChains(out chn_q: cell, out chn_dq: cell, obj, chain_names: string[1..*], q_j: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4220.5">+getStateJointNames(out jnt_q: vector, out jnt_dq: vector, obj, joint_names: string[1..*])</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4235.5">+getStateJointNames(out jnt_q: vector, out jnt_dq: vector, obj, joint_names: string[1..*], q_j: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4250.5">+getStateJointIdx(out jnt_q: vector, out jnt_dq: vector, obj, joint_idx: integer[1..*])</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4265.5">+getStateJointIdx(out jnt_q: vector, out jnt_dq: vector, obj, joint_idx: integer[1..*], q_j: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4280.5">+getStateParams(out stParams: wbmStateParams, obj, stChi: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4295.5">+getStateParams(out stParams: wbmStateParams, obj, stChi: matrix)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4310.5">+getPositions(out vqT_b: vector, out q_j: vector, obj, stChi: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4325.5">+getPositions(out vqT_b: matrix, out q_j: matrix, obj, stChi: matrix)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4340.5">+getPositionsData(out stmPos: matrix, obj, stmChi: matrix)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4355.5">+getMixedVelocities(out v_b: vector, out dq_j: vector, obj, stChi: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4370.5">+getMixedVelocities(out v_b: matrix, out dq_j: matrix, obj, stChi: matrix)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4385.5">+getBaseVelocities(out v_b: vector, obj, stChi: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4400.5">+getBaseVelocities(out v_b: matrix, obj, stChi: matrix)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4415.5">+get.stvLen(out len: integer, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4430.5">+get.vqT_base(out vqT_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4445.5">+get.init_vqT_base(out vqT_b: vector, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4460.5">+get.init_stvChi(out stvChi: vector, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4475.5">+set.init_state(obj, stp_init: wbmStateParams)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4490.5">+get.init_state(out stp_init: wbmStateParams, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4505.5">+get.robot_body(out robot_body: wbmBody, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4520.5">+get.robot_config(out robot_config: wbmBaseRobotConfig, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4535.5">+get.robot_params(out robot_params: wbmBaseRobotParams, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4550.5">+dispConfig(obj, prec: integer = 2)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4565.5">-initConfig(obj, robot_config: wbmBaseRobotConfig)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4580.5">-getJointValues(out jnt_q: vector, out jnt_dq: vector, obj, q_j: vector, dq_j: vector, joint_idx: integer[1..*], len: integer)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4595.5">-checkInitStateDimensions(out result: logical, obj, stp_init: wbmStateParams)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4610.5">-wholeBodyDynamicsCC(out M: matrix, out c_qv: vector, out Jc: matrix, out djcdq: vector, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4625.5">-wholeBodyDynamicsCC(out M: matrix, out c_qv: vector, out Jc: matrix, out djcdq: vector, obj, idx_list: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4640.5">-wholeBodyDynamicsCC(out M: matrix, out c_qv: vector, out Jc: matrix, out djcdq: vector, obj, wf_R_b_arr: vector, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4655.5">-wholeBodyDynamicsCC(out M: matrix, out c_qv: vector, out Jc: matrix, out djcdq: vector, obj, wf_R_b_arr: vector, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector, idx_list: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4670.5">-wholeBodyDyn(out M: matrix, out c_qv: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4685.5">-wholeBodyDyn(out M: matrix, out c_qv: vector, wf_R_b_arr: vector, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4700.5">-fdynNewMixedVelocities(out nu: vector, qt_b: vector, dx_b: vector, wf_omega_b: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4715.5">-getContactIdx(out clink_idx: integer[1..2], clink_conf: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4730.5">-feetContactForces(out fc_f: vector, out tau_gen: vector, obj, feet_conf: struct, tau: vector, ac_f: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4745.5">-feetContactForcesPC(out fc_f: vector, out tau_gen: vector, obj, feet_conf: struct, tau: vector, ac_f: vector, Jc_f: matrix, djcdq_f: vector, M: matrix, c_qv: vector, dq_j: vector, nu: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4760.5">-fullWholeBodyDynCS(out M, out c_qv, out Jc_f, out djcdq_f, out Jc, out djcdq, obj, feet_conf: struct, clink_conf: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4775.5">-fullWholeBodyDynCS(out M, out c_qv, out Jc_f, out djcdq_f, out Jc, out djcdq, obj, feet_conf: struct, clink_conf: struct, wf_R_b: matrix, wf_p_b: vector, q_j: vector, dq_j: vector, v_b: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4790.5">-getWBDynFeet(out M: matrix, out c_qv: vector, out Jc_f: matrix, a_prms: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4805.5">-createConfigStateCL(out clink_conf: struct, obj, cstate: logical[2], clink_l: string, clink_r: string, q_j: vector, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4820.5">-createConfigStateCL(out clink_conf: struct, obj, cstate: logical[2], clink_l: string, clink_r: string, q_j: vector, k_p: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4835.5">-createConfigStateCL(out clink_conf: struct, obj, cstate: logical[2], clink_l: string, clink_r: string, q_j: vector, k_p: double, k_v: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4850.5">-createConfigStateCL(out clink_conf: struct, obj, cstate: logical[2], clink_l: string, clink_r: string, veT_lnk: matrix, k_p: double, k_v: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="871" y="4865.5">-createConfigStateCL(out clink_conf: struct, obj, cstate: logical[2], clink_l: string, clink_r: string, vqT_lnk: matrix, k_p: double, k_v: double, rtype: string = "eul")</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 1607 1500 L 1607 1325" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1615.419035512032 1345.3253497152482 L 1607 1325 L 1598.580964487968 1345.3253497152482"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 1615.419035512032 1345.3253497152482 L 1607 1325 L 1598.580964487968 1345.3253497152482 L 1615.419035512032 1345.3253497152482" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="319" y="833" width="153" height="195" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ffaeb9" stroke="none" x="312" y="826" width="153" height="195"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 312 826 L 465 826 L 465 1021 L 312 1021 L 312 826 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 312 864 L 465 864" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="355" y="843.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="325.5" y="858.5">wbmBaseRobotModel</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="317" y="881.5">+ndof: integer</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="317" y="896.5">+urdf_robot_name: string</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="317" y="911.5">+urdf_fixed_link: string</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="317" y="926.5">+wf_R_b_init: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="317" y="941.5">+wf_p_b_init: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="317" y="956.5">+g_wf: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="317" y="971.5">+frict_coeff.v: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="317" y="986.5">+frict_coeff.c: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="317" y="1001.5">+jlmts.lwr: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="317" y="1016.5">+jlmts.upr: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="19" y="1833" width="150" height="195" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#a3ffa3" stroke="none" x="12" y="1826" width="150" height="195"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 1826 L 162 1826 L 162 2021 L 12 2021 L 12 1826 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 1864 L 162 1864" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="53.5" y="1843.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="26.5" y="1858.5">wbmHumanoidConfig</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="1881.5">+jpos_head: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="1896.5">+jpos_torso: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="1911.5">+jpos_left_arm: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="1926.5">+jpos_left_hand: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="1941.5">+jpos_left_leg: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="1956.5">+jpos_left_foot: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="1971.5">+jpos_right_arm: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="1986.5">+jpos_right_hand: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2001.5">+jpos_right_leg: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2016.5">+jpos_right_foot: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2661" y="517" width="106" height="60" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ffffff" stroke="none" x="2654" y="510" width="106" height="60"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2654 510 L 2760 510 L 2760 570 L 2654 570 L 2654 510 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 2734 527 C 2734 522.0294368 2738.0294368 518 2743 518 C 2747.9705632 518 2752 522.0294368 2752 527 C 2752 531.9705632 2747.9705632 536 2743 536 C 2738.0294368 536 2734 531.9705632 2734 527 Z"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2734 527 C 2734 522.0294368 2738.0294368 518 2743 518 C 2747.9705632 518 2752 522.0294368 2752 527 C 2752 531.9705632 2747.9705632 536 2743 536 C 2738.0294368 536 2734 531.9705632 2734 527 Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2654 548 L 2760 548" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2663.5" y="527.5">«interface»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="2676" y="542.5">handle</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="normal" text-decoration="none" x="2659" y="565.5">+delete()</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="405" y="1863" width="121" height="135" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ffadd6" stroke="none" x="398" y="1856" width="121" height="135"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 398 1856 L 519 1856 L 519 1991 L 398 1991 L 398 1856 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 398 1894 L 519 1894" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="425" y="1873.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="407" y="1888.5">wbmStateParams</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="403" y="1911.5">+x_b: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="403" y="1926.5">+qt_b: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="403" y="1941.5">+q_j: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="403" y="1956.5">+dx_b: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="403" y="1971.5">+omega_b: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="403" y="1986.5">+dq_j: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 866 1924 L 519 1924" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 529.1626748576241 1919.7904822439841 L 519 1924 L 529.1626748576241 1928.2095177560159" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="674.5" y="1920.5">«use»</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 608 1964 L 763 1964 L 773 1974 L 773 2000 L 608 2000 L 608 1964"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 608 1964 L 763 1964 L 773 1974 L 773 2000 L 608 2000 L 608 1964 L 608 1964" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 763 1964 L 763 1974 L 773 1974 L 763 1964" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="613" y="1982">State parameters of the</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="613" y="1995">current state of the robot.</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="391" y="2135" width="149" height="120" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#d6adff" stroke="none" x="384" y="2128" width="149" height="120"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 384 2128 L 533 2128 L 533 2248 L 384 2248 L 384 2128 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 384 2166 L 533 2166" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="425" y="2145.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="395" y="2160.5">wbmBaseRobotConfig</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="389" y="2183.5">+nCstrs: integer</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="389" y="2198.5">+ccstr_link_names: cell</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="389" y="2213.5">+nPlds: integer</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="389" y="2228.5">+nTools: integer</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="389" y="2243.5">+stvLen: integer</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="53" y="1707" width="169" height="37" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ffffff" stroke="none" x="46" y="1700" width="169" height="37"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 46 1700 L 215 1700 L 215 1737 L 46 1737 L 46 1700 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="97" y="1717.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="60" y="1732.5">yourSpecificRobotConfig</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 162 1924 L 272 1924 M 272 1924 A 8 8 0 0 1 280 1932 L 280 2150 M 280 2150 A 8 8 0 0 0 288 2158 L 384 2158" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 363.6746502847517 2166.4190355120318 L 384 2158 L 363.6746502847517 2149.5809644879682"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 363.6746502847517 2166.4190355120318 L 384 2158 L 363.6746502847517 2149.5809644879682 L 363.6746502847517 2166.4190355120318" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 18 2054 L 151 2054 L 161 2064 L 161 2103 L 18 2103 L 18 2054"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 18 2054 L 151 2054 L 161 2064 L 161 2103 L 18 2103 L 18 2054 L 18 2054" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 151 2054 L 151 2064 L 161 2064 L 151 2054" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="2072">General configuration</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="2085">structure of a</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="2098">humanoid robot.</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 215 1718 L 272 1718 M 272 1718 A 8 8 0 0 1 280 1726 L 280 2150 M 280 2150 A 8 8 0 0 0 288 2158 L 384 2158" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 363.6746502847517 2166.4190355120318 L 384 2158 L 363.6746502847517 2149.5809644879682"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 363.6746502847517 2166.4190355120318 L 384 2158 L 363.6746502847517 2149.5809644879682 L 363.6746502847517 2166.4190355120318" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 18 1544 L 221 1544 L 231 1554 L 231 1606 L 18 1606 L 18 1544"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 18 1544 L 221 1544 L 231 1554 L 231 1606 L 18 1606 L 18 1544 L 18 1544" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 221 1544 L 221 1554 L 231 1554 L 221 1544" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="1562">Since every robot is different, you</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="1575">can specify the configuration</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="1588">parameters of your robot in your</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="1601">own data type.</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 465 925 L 1190 925" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#000000" stroke="none" d="M 1179.837325142376 929.209517756016 L 1190 925 L 1179.837325142376 920.790482243984 L 1168 925"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 1179.837325142376 929.209517756016 L 1190 925 L 1179.837325142376 920.790482243984 L 1168 925 L 1179.837325142376 929.209517756016" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 475.16267485762415 920.790482243984 L 465 925 L 475.16267485762415 929.209517756016" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="784.5" y="941.5">#mwbm_model</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="482.5" y="943.5">1</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 734 848 L 909 848 L 919 858 L 919 884 L 734 884 L 734 848"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 734 848 L 909 848 L 919 858 L 919 884 L 734 884 L 734 848 L 734 848" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 909 848 L 909 858 L 919 858 L 909 848" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="739" y="866">Base model parameters of a</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="739" y="879">floating base robot.</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 533 2188 L 866 2188" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#000000" stroke="none" d="M 855.8373251423759 2192.209517756016 L 866 2188 L 855.8373251423758 2183.790482243984 L 844 2188"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 855.8373251423759 2192.209517756016 L 866 2188 L 855.8373251423758 2183.790482243984 L 844 2188 L 855.8373251423759 2192.209517756016" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 543.1626748576241 2183.790482243984 L 533 2188 L 543.1626748576241 2192.209517756016" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="655.5" y="2203.5">#mwbm_config</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="550.5" y="2205.5">1</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 632 2112 L 753 2112 L 763 2122 L 763 2148 L 632 2148 L 632 2112"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 632 2112 L 753 2112 L 763 2122 L 763 2148 L 632 2148 L 632 2112 L 632 2112" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 753 2112 L 753 2122 L 763 2122 L 753 2112" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="637" y="2130">Initial condition of a</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="637" y="2143">floating base robot.</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 458 1991 L 458 2128" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#000000" stroke="none" d="M 453.790482243984 2117.837325142376 L 458 2128 L 462.209517756016 2117.837325142376 L 458 2106"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 453.790482243984 2117.837325142376 L 458 2128 L 462.209517756016 2117.837325142376 L 458 2106 L 453.790482243984 2117.837325142376" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 462.209517756016 2001.162674857624 L 458 1991 L 453.790482243984 2001.162674857624" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="461.5" y="2063.5">+init_state_params</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="441.5" y="2018.5">1</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2603" y="1509" width="266" height="525" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ff6a6a" stroke="none" x="2596" y="1502" width="266" height="525"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2596 1502 L 2862 1502 L 2862 2027 L 2596 2027 L 2596 1502 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2596 1540 L 2862 1540" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2706.5" y="1519.5">«utility»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2689" y="1534.5">wbmErrorMsg</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1557.5">+DIM_MISMATCH: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1557.5 L 2811 1557.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1572.5">+EMPTY_ARRAY: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1572.5 L 2810 1572.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1587.5">+EMPTY_DATA_TYPE: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1587.5 L 2840 1587.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1602.5">+EMPTY_STRING: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1602.5 L 2812 1602.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1617.5">+EMPTY_VECTOR: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1617.5 L 2818 1617.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1632.5">+FILE_NOT_EXIST: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1632.5 L 2815 1632.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1647.5">+IDX_OUT_OF_BOUNDS: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1647.5 L 2852 1647.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1662.5">+LIST_NOT_SORTED: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1662.5 L 2832 1662.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1677.5">+LNK_NOT_IN_LIST: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1677.5 L 2823 1677.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1692.5">+MAX_JOINT_LIMIT: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1692.5 L 2820 1692.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1707.5">+MAX_NUM_LIMIT: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1707.5 L 2814 1707.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1722.5">+NAME_NOT_EXIST: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1722.5 L 2826 1722.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1737.5">+NOT_HOMOG_MAT: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1737.5 L 2830 1737.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1752.5">+NO_LNK_IN_CTC: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1752.5 L 2815 1752.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1767.5">+SINGULAR_MAT: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1767.5 L 2812 1767.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1782.5">+STRING_MISMATCH: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1782.5 L 2835 1782.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1797.5">+UNKNOWN_AXIS_SEQ: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1797.5 L 2851 1797.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1812.5">+UNKNOWN_CTC_MODEL {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1812.5 L 2826 1812.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1827.5">+UNKNOWN_EXC: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1827.5 L 2813 1827.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1842.5">+UNKNOWN_JNT_TYPE: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1842.5 L 2851 1842.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1857.5">+UNKNOWN_LNK_NAME: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1857.5 L 2858 1857.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1872.5">+VALUE_IS_INIT: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1872.5 L 2804 1872.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1887.5">+VALUE_LTE_ZERO: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1887.5 L 2828 1887.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1902.5">+VALUE_LT_ZERO: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1902.5 L 2819 1902.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1917.5">+VAL_OUT_OF_BOUNDS: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1917.5 L 2858 1917.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1932.5">+WRONG_ARR_SIZE: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1932.5 L 2833 1932.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1947.5">+WRONG_DATA_TYPE: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1947.5 L 2846 1947.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1962.5">+WRONG_MAT_DIM: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1962.5 L 2828 1962.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1977.5">+WRONG_NARGIN: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1977.5 L 2820 1977.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1992.5">+WRONG_NARGOUT: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 1992.5 L 2834 1992.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="2007.5">+WRONG_VEC_DIM: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 2007.5 L 2828 2007.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="2022.5">+WRONG_VEC_SIZE: string {readOnly}</text><path fill="none" stroke="#000000" d="M 2601 2022.5 L 2833 2022.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2023 1324 L 2462 1324 M 2462 1324 A 8 8 0 0 1 2470 1332 L 2470 1544 M 2470 1544 A 8 8 0 0 0 2478 1552 L 2596 1552" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2585.837325142376 1556.2095177560159 L 2596 1552 L 2585.837325142376 1547.7904822439841" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2473.5" y="1443.5">«use»</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2023 540 L 2654 540" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2633.674650284752 548.419035512032 L 2654 540 L 2633.674650284752 531.580964487968"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2633.674650284752 548.419035512032 L 2654 540 L 2633.674650284752 531.580964487968 L 2633.674650284752 548.419035512032" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="19" y="2551" width="690" height="248" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ffe2d8" stroke="none" x="12" y="2544" width="690" height="248"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 2544 L 702 2544 L 702 2792 L 12 2792 L 12 2544 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 2582 L 702 2582" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 2695 L 702 2695" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="323.5" y="2561.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="328.5" y="2576.5">wbmBody</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2599.5">+chains.name: string[1..*] {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2614.5">+chains.start_idx: integer[1..*] {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2629.5">+chains.end_idx: integer[1..*] {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2644.5">+nChains: integer {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2659.5">+joints.name: string[1..*] {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2674.5">+joints.idx: integer[1..*] {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2689.5">+nJoints: integer {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2712.5">+wbmBody(out obj: wbmBody, chain_names: string[1..*], chain_idx: matrix, joint_names: string[1..*], joint_idx: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2727.5">+getChainIndices(out jnt_idx: vector, obj, chain_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2742.5">+getJointIndex(out jnt_idx: integer, obj, joint_name: string)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2757.5">+getJointNames(out jnt_names: string[1..*], obj, joint_idx: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2772.5">+getChainTable(out chn_tbl: table, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2787.5">+getJointTable(out jnt_tbl: table, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 460 2544 L 460 2248" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#000000" stroke="none" d="M 464.209517756016 2258.162674857624 L 460 2248 L 455.790482243984 2258.162674857624 L 460 2270"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 464.209517756016 2258.162674857624 L 460 2248 L 455.790482243984 2258.162674857624 L 460 2270 L 464.209517756016 2258.162674857624" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 455.790482243984 2533.837325142376 L 460 2544 L 464.209517756016 2533.837325142376" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="417.5" y="2400.5">+body</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="428.5" y="2524.5">0..1</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3033" y="1881" width="257" height="255" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#8282ff" stroke="none" x="3026" y="1874" width="257" height="255"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3026 1874 L 3283 1874 L 3283 2129 L 3026 2129 L 3026 1874 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3026 1912 L 3283 1912" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3121" y="1891.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="3113.5" y="1906.5">absSimConfig</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="1929.5">+DF_MAIN_POS: vector {readOnly}</text><path fill="none" stroke="#000000" d="M 3031 1929.5 L 3236 1929.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="1944.5">+DF_AXES_POS: matrix {readOnly}</text><path fill="none" stroke="#000000" d="M 3031 1944.5 L 3240 1944.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="1959.5">+DF_AXES_COLORS: matrix {readOnly}</text><path fill="none" stroke="#000000" d="M 3031 1959.5 L 3266 1959.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="1974.5">+DF_AXIS_LIMITS: vector {readOnly}</text><path fill="none" stroke="#000000" d="M 3031 1974.5 L 3244 1974.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="1989.5">+DF_GROUND_SHAPE: matrix {readOnly}</text><path fill="none" stroke="#000000" d="M 3031 1989.5 L 3279 1989.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="2004.5">+DF_GROUND_COLOR: vector {readOnly}</text><path fill="none" stroke="#000000" d="M 3031 2004.5 L 3277 2004.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="2019.5">+hMainFigure: matlab.ui.Figure</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="2034.5">+main_title: string</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="2049.5">+main_pos: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="2064.5">+hAxes: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="2079.5">+axes_pos: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="2094.5">+axes_colors: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="2109.5">+axis_limits: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3031" y="2124.5">+plot_objs: cell</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2880 2211 L 3148 2211 M 3148 2211 A 8 8 0 0 0 3156 2203 L 3156 2129" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 3164.4190355120318 2149.325349715248 L 3156 2129 L 3147.5809644879682 2149.325349715248"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3164.4190355120318 2149.325349715248 L 3156 2129 L 3147.5809644879682 2149.325349715248 L 3164.4190355120318 2149.325349715248" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2753" y="2199" width="134" height="37" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ffffff" stroke="none" x="2746" y="2192" width="134" height="37"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2746 2192 L 2880 2192 L 2880 2229 L 2746 2229 L 2746 2192 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2779.5" y="2209.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2758" y="2224.5">yourOwnSimConfig</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2577" y="2399" width="775" height="83" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#b6ff6d" stroke="none" x="2570" y="2392" width="775" height="83"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2570 2392 L 3345 2392 L 3345 2475 L 2570 2475 L 2570 2392 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2570 2430 L 3345 2430" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2570 2453 L 3345 2453" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2924" y="2409.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2907" y="2424.5">genericSimConfig</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2575" y="2447.5">+DF_GROUND_COLOR_2: vector {readOnly}</text><path fill="none" stroke="#000000" d="M 2575 2447.5 L 2835 2447.5" stroke-miterlimit="10"></path></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2575" y="2470.5">+genericSimConfig(out obj: genericSimConfig, main_title: string, robot_sim_body: wbmSimBody, env_settings: wbmSimEnvironment)</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2353 2078 L 3026 2078" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3015.837325142376 2082.209517756016 L 3026 2078 L 3015.837325142376 2073.790482243984" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2671.5" y="2073.5">«use»</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2353 1766 L 2596 1766" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2585.837325142376 1770.2095177560159 L 2596 1766 L 2585.837325142376 1761.7904822439841" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2450.5" y="1761.5">«use»</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2603" y="825" width="688" height="563" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#d8fff8" stroke="none" x="2596" y="818" width="688" height="563"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2596 818 L 3284 818 L 3284 1381 L 2596 1381 L 2596 818 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2596 856 L 3284 856" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2596 1134 L 3284 1134" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2906.5" y="835.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2900" y="850.5">wbmSimBody</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="873.5">+shape_geom: struct</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="888.5">+shape_size_sf: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="903.5">+shape_faces: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="918.5">+foot_geom: struct</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="933.5">+foot_joints: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="948.5">+foot_base_sz</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="963.5">+foot_shape_ds: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="978.5">+joint_lnk_names: string[1..*] {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="993.5">+joint_pair_idx: matrix {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1008.5">+nJoints: integer {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1023.5">+nLinks: integer {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1038.5">+nFeets: integer {readOnly}</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1053.5">-mshape_geom.size_sf: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1068.5">-mshape_geom.faces: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1083.5">-mfoot_geom.joints: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1098.5">-mfoot_geom.base_sz.width: double</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1113.5">-mfoot_geom.base_sz.height: double</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1128.5">-mfoot_geom.shape_ds: double</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1151.5">+wbmSimBody(out obj: wbmSimBody, joint_lnk_names: string[1..*], joint_pair_idx: matrix, draw_prop: wbmDrawProp)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1166.5">+set.shape_geom(obj, shape_geom: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1181.5">+get.shape_geom(out shape_geom: struct, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1196.5">+set.shape_size_sf(obj, size_sf: matrix)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1211.5">+get.shape_size_sf(out shape_size_sf: matrix, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1226.5">+set.shape_faces(obj, shape_faces: matrix)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1241.5">+get.shape_faces(out shape_faces: matrix, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1256.5">+set.foot_geom(obj, foot_geom: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1271.5">+get.foot_geom(out foot_geom: struct, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1286.5">+set.foot_joints(obj, foot_jnts: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1301.5">+get.foot_joints(out foot_jnts: vector, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1316.5">+set.foot_base_sz(obj, base_sz: struct)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1331.5">+set.foot_base_sz(obj, base_sz: vector)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1346.5">+get.foot_base_sz(out foot_base_sz: struct, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1361.5">+set.foot_shape_ds(obj, foot_ds: matrix)</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2601" y="1376.5">+get.foot_shape_ds(out foot_shape_ds: matrix, obj)</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2708 818 L 2708 570" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2716.4190355120318 590.3253497152483 L 2708 570 L 2699.5809644879682 590.3253497152483"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2716.4190355120318 590.3253497152483 L 2708 570 L 2699.5809644879682 590.3253497152483 L 2716.4190355120318 590.3253497152483" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3135" y="517" width="79" height="37" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ffc1ad" stroke="none" x="3128" y="510" width="79" height="37"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3128 510 L 3207 510 L 3207 547 L 3128 547 L 3128 510 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3145" y="527.5">«utility»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3139" y="542.5">wbmColor</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2865" y="423" width="164" height="225" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ffe4b5" stroke="none" x="2858" y="416" width="164" height="225"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2858 416 L 3022 416 L 3022 641 L 2858 641 L 2858 416 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2858 454 L 3022 454" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2906.5" y="433.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2881.5" y="448.5">wbmRobotDrawProp</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="471.5">+joints.marker: char</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="486.5">+joints.marker_sz: double</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="501.5">+joints.color</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="516.5">+links.line_width: double</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="531.5">+links.color</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="546.5">+com.marker: char</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="561.5">+com.marker_sz: double</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="576.5">+com.color</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="591.5">+shape.line_width: double</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="606.5">+shape.edge_color</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="621.5">+shape.face_color</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2863" y="636.5">+shape.face_alpha: double</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2940 1381 L 2940 1884 M 2940 1884 A 8 8 0 0 0 2948 1892 L 3026 1892" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#000000" stroke="none" d="M 3015.837325142376 1896.2095177560159 L 3026 1892 L 3015.837325142376 1887.7904822439841 L 3004 1892"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3015.837325142376 1896.2095177560159 L 3026 1892 L 3015.837325142376 1887.7904822439841 L 3004 1892 L 3015.837325142376 1896.2095177560159" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2944.209517756016 1391.162674857624 L 2940 1381 L 2935.790482243984 1391.162674857624" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2944.5" y="1642.5">+robot_body</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2923.5" y="1408.5">1</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2730 1381 L 2730 1502" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2725.790482243984 1491.837325142376 L 2730 1502 L 2734.209517756016 1491.837325142376" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2733.5" y="1445.5">«use»</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2940 641 L 2940 818" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#000000" stroke="none" d="M 2935.790482243984 807.8373251423759 L 2940 818 L 2944.209517756016 807.8373251423759 L 2940 796"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2935.790482243984 807.8373251423759 L 2940 818 L 2944.209517756016 807.8373251423759 L 2940 796 L 2935.790482243984 807.8373251423759" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2944.209517756016 651.1626748576241 L 2940 641 L 2935.790482243984 651.1626748576241" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2867.5" y="733.5">+draw_prop</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2923.5" y="668.5">1</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3022 528 L 3128 528" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3117.837325142376 532.209517756016 L 3128 528 L 3117.837325142376 523.790482243984" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3054.5" y="523.5">«use»</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2646 2392 L 2646 2027" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2650.209517756016 2037.162674857624 L 2646 2027 L 2641.790482243984 2037.162674857624" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2606.5" y="2215.5">«use»</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 3046 704 L 3189 704 L 3199 714 L 3199 753 L 3046 753 L 3046 704"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3046 704 L 3189 704 L 3199 714 L 3199 753 L 3046 753 L 3046 704 L 3046 704" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3189 704 L 3189 714 L 3199 714 L 3189 704" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3051" y="722">Draw properties for the</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3051" y="735">body components of the</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3051" y="748">simulated robot.</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3045 729 L 2941 729" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 2950 1680 L 3119 1680 L 3129 1690 L 3129 1729 L 2950 1729 L 2950 1680"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2950 1680 L 3119 1680 L 3129 1690 L 3129 1729 L 2950 1729 L 2950 1680 L 2950 1680" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3119 1680 L 3119 1690 L 3129 1690 L 3119 1680" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2955" y="1698">Geometry data to define the</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2955" y="1711">structure and the shape of</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2955" y="1724">the simulated robot.</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 2878 2298 L 3079 2298 L 3089 2308 L 3089 2347 L 2878 2347 L 2878 2298"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2878 2298 L 3079 2298 L 3089 2308 L 3089 2347 L 2878 2347 L 2878 2298 L 2878 2298" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3079 2298 L 3079 2308 L 3089 2308 L 3079 2298" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2883" y="2316">General configuration data for the</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2883" y="2329">environment and the robot in the</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2883" y="2342">simulaton.</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 494 2376 L 685 2376 L 695 2386 L 695 2412 L 494 2412 L 494 2376"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 494 2376 L 685 2376 L 695 2386 L 695 2412 L 494 2412 L 494 2376 L 494 2376" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 685 2376 L 685 2386 L 695 2386 L 685 2376" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="499" y="2394">Configuration data to define the</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="499" y="2407">body components of the robot.</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 460 2396 L 493 2396" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3169" y="1573" width="184" height="135" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#fffacd" stroke="none" x="3162" y="1566" width="184" height="135"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3162 1566 L 3346 1566 L 3346 1701 L 3162 1701 L 3162 1566 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3162 1604 L 3346 1604" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3220.5" y="1583.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="3193.5" y="1598.5">wbmSimEnvironment</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3167" y="1621.5">+background_color_opt: string</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3167" y="1636.5">+ground_shape: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3167" y="1651.5">+ground_color</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3167" y="1666.5">+ground_edge_color</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3167" y="1681.5">+origin_pt_color</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3167" y="1696.5">+origin_pt_size: double</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3254 1701 L 3254 1874" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#000000" stroke="none" d="M 3249.790482243984 1863.837325142376 L 3254 1874 L 3258.209517756016 1863.837325142376 L 3254 1852"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3249.790482243984 1863.837325142376 L 3254 1874 L 3258.209517756016 1863.837325142376 L 3254 1852 L 3249.790482243984 1863.837325142376" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3258.209517756016 1711.162674857624 L 3254 1701 L 3249.790482243984 1711.162674857624" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3257.5" y="1792.5">+environment</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3237.5" y="1728.5">1</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 3056 1768 L 3203 1768 L 3213 1778 L 3213 1806 L 3056 1806 L 3056 1768"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3056 1768 L 3203 1768 L 3213 1778 L 3213 1806 L 3056 1806 L 3056 1768 L 3056 1768" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3203 1768 L 3203 1778 L 3213 1778 L 3203 1768" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3061" y="1786">Environment settings for</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3061" y="1799">the simulation.</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3312 1566 L 3312 536 M 3312 536 A 8 8 0 0 0 3304 528 L 3207 528" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3217.162674857624 523.790482243984 L 3207 528 L 3217.162674857624 532.209517756016" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3317.5" y="993.5">«use»</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2982 1731 L 2982 1891" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3156 2392 L 3156 2129" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 3164.4190355120318 2149.325349715248 L 3156 2129 L 3147.5809644879682 2149.325349715248"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3164.4190355120318 2149.325349715248 L 3156 2129 L 3147.5809644879682 2149.325349715248 L 3164.4190355120318 2149.325349715248" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 702 2792 L 702 4896 M 702 4896 A 8 8 0 0 0 710 4904 L 2454 4904 M 2454 4904 A 8 8 0 0 0 2462 4896 L 2462 1984 M 2462 1984 A 8 8 0 0 1 2470 1976 L 2596 1976" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 2585.837325142376 1980.2095177560159 L 2596 1976 L 2585.837325142376 1971.7904822439841" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1565.5" y="4918.5">«use»</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="401" y="1655" width="128" height="90" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ffa07a" stroke="none" x="394" y="1648" width="128" height="90"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 394 1648 L 522 1648 L 522 1738 L 394 1738 L 394 1648 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 394 1686 L 522 1686" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="424.5" y="1665.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="403" y="1680.5">wbmFltgBaseState</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="399" y="1703.5">+wf_R_b: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="399" y="1718.5">+wf_p_b: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="399" y="1733.5">+v_b: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 580 1768 L 763 1768 L 773 1778 L 773 1817 L 580 1817 L 580 1768"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 580 1768 L 763 1768 L 773 1778 L 773 1817 L 580 1817 L 580 1768 L 580 1768" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 763 1768 L 763 1778 L 773 1778 L 763 1768" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="585" y="1786">State parameters of the robot</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="585" y="1799">floating base. This data type is</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="585" y="1812">useful e.g. for interfaces.</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="317" y="1481" width="156" height="60" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#ffdab9" stroke="none" x="310" y="1474" width="156" height="60"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 310 1474 L 466 1474 L 466 1534 L 310 1534 L 310 1474 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 310 1512 L 466 1512" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="354.5" y="1491.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="320" y="1506.5">wbmBaseRobotParams</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="315" y="1529.5">+wf2fixLnk: logical</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 389 1021 L 389 1474" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#000000" stroke="none" d="M 384.790482243984 1463.837325142376 L 389 1474 L 393.209517756016 1463.837325142376 L 389 1452"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 384.790482243984 1463.837325142376 L 389 1474 L 393.209517756016 1463.837325142376 L 389 1452 L 384.790482243984 1463.837325142376" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 393.209517756016 1031.162674857624 L 389 1021 L 384.790482243984 1031.162674857624" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="393.5" y="1251.5">+model</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="397.5" y="1049.5">1</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 384 2128 L 346 2128 M 346 2128 A 8 8 0 0 1 338 2120 L 338 1534" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#000000" stroke="none" d="M 342.209517756016 1544.162674857624 L 338 1534 L 333.790482243984 1544.162674857624 L 338 1556"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 342.209517756016 1544.162674857624 L 338 1534 L 333.790482243984 1544.162674857624 L 338 1556 L 342.209517756016 1544.162674857624" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 373.83732514237585 2132.209517756016 L 384 2128 L 373.83732514237585 2123.790482243984" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="341.5" y="1836.5">+config</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="357.5" y="2121.5">1</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 98 1386 L 281 1386 L 291 1396 L 291 1448 L 98 1448 L 98 1386"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 98 1386 L 281 1386 L 291 1396 L 291 1448 L 98 1448 L 98 1386 L 98 1386" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 281 1386 L 281 1396 L 291 1396 L 281 1386" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="103" y="1404">Base model and configuration</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="103" y="1417">parameters of a floating base</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="103" y="1430">robot. This data type is useful</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="103" y="1443">e.g. for interfaces.</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 350 1474 L 350 1425 M 350 1425 A 8 8 0 0 0 342 1417 L 292 1417" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3215 1787 L 3253 1787" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="19" y="2143" width="144" height="105" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#b9bbff" stroke="none" x="12" y="2136" width="144" height="105"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 2136 L 156 2136 L 156 2241 L 12 2241 L 12 2136 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 2174 L 156 2174" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="50.5" y="2153.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="35" y="2168.5">wbmPayloadLink</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2191.5">+urdf_link_name: string</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2206.5">+lnk_p_cm: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2221.5">+m_rb: double</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2236.5">+I_cm: matrix</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 156 2188 L 384 2188" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#000000" stroke="none" d="M 373.83732514237585 2192.209517756016 L 384 2188 L 373.83732514237585 2183.790482243984 L 362 2188"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 373.83732514237585 2192.209517756016 L 384 2188 L 373.83732514237585 2183.790482243984 L 362 2188 L 373.83732514237585 2192.209517756016" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 166.16267485762415 2183.790482243984 L 156 2188 L 166.16267485762415 2192.209517756016" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="225.5" y="2203.5">+payload_links</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="166.5" y="2206.5">0..*</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 18 2266 L 249 2266 L 259 2276 L 259 2328 L 18 2328 L 18 2266"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 18 2266 L 249 2266 L 259 2276 L 259 2328 L 18 2328 L 18 2266 L 18 2266" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 249 2266 L 249 2276 L 259 2276 L 249 2266" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="2284">Payload at a specified link, e.g. hands</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="2297">with a point mass of a rigid body at a</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="2310">specified position in the frame of the</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="2323">reference (end-effector) link.</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 87 2054 L 87 2021" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 59 1648 L 59 1607" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 86 2266 L 86 2241" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 458 1738 L 458 1785 M 458 1785 A 8 8 0 0 0 466 1793 L 580 1793" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 866 1502 L 466 1502" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 476.16267485762415 1497.7904822439841 L 466 1502 L 476.16267485762415 1506.2095177560159" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="646.5" y="1497.5">«use»</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 1190 1324 L 760 1324 M 760 1324 A 8 8 0 0 0 752 1332 L 752 1686 M 752 1686 A 8 8 0 0 1 744 1694 L 522 1694" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 532.1626748576241 1689.7904822439841 L 522 1694 L 532.1626748576241 1698.2095177560159" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="618.5" y="1689.5">«use»</text></g></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="19" y="2361" width="144" height="75" opacity="0.2"></rect></g><g transform="translate(-2,0) scale(1,1)"><rect fill="#fff2b9" stroke="none" x="12" y="2354" width="144" height="75"></rect></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 2354 L 156 2354 L 156 2429 L 12 2429 L 12 2354 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 12 2392 L 156 2392" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="50.5" y="2371.5">«dataType»</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="46.5" y="2386.5">wbmToolLink</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2409.5">+urdf_link_name: string</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="17" y="2424.5">+ee_vqT_tt: vector</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 156 2393 L 376 2393 M 376 2393 A 8 8 0 0 0 384 2385 L 384 2248" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="#000000" stroke="none" d="M 388.209517756016 2258.162674857624 L 384 2248 L 379.790482243984 2258.162674857624 L 384 2270"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 388.209517756016 2258.162674857624 L 384 2248 L 379.790482243984 2258.162674857624 L 384 2270 L 388.209517756016 2258.162674857624" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 166.16267485762415 2388.790482243984 L 156 2393 L 166.16267485762415 2397.209517756016" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="237.5" y="2408.5">+tool_links</text></g></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="166.5" y="2411.5">0..*</text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="#ffffff" stroke="none" d="M 18 2462 L 251 2462 L 261 2472 L 261 2511 L 18 2511 L 18 2462"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 18 2462 L 251 2462 L 261 2472 L 261 2511 L 18 2511 L 18 2462 L 18 2462" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 251 2462 L 251 2472 L 261 2472 L 251 2462" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="2480">Tool at a spezified end-effector link, i.e.</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="2493">hand/finger, with an orientation and</text><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="23" y="2506">translation relative to the link frame. </text></g></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 86 2462 L 86 2429" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 699 2188 L 698 2188 L 698 2149" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 691 1963 L 691 1925" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 3040 2297 L 3040 2268 M 3040 2268 A 8 8 0 0 1 3048 2260 L 3155 2260" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 827 886 L 827 924" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 866 2669 L 702 2669" stroke-miterlimit="10" stroke-dasharray="3"></path></g><g transform="translate(-2,0) scale(1,1)"><path fill="none" stroke="#000000" d="M 712.1626748576241 2664.790482243984 L 702 2669 L 712.1626748576241 2673.209517756016" stroke-miterlimit="10"></path></g><g transform="translate(-2,0) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="765.5" y="2665.5">«use»</text></g></g></g></svg>